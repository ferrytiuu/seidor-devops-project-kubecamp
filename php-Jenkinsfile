pipeline {
    agent any
    parameters {
        string(name: 'USER', defaultValue: 'ferrytiuu', description: 'Username')
        string(name: 'TAG', defaultValue: 'latest', description: 'Version of the image')
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('SonarQube Analysis') {
            steps {
                script {
                    def scannerHome = tool 'sonarqube_5.0'
                    withSonarQubeEnv(installationName: 'aroldev sonarqube') {
                        sh "${scannerHome}/bin/sonar-scanner -Dsonar.projectKey=ferran-kubecamp-php -Dsonar.sources=./services/php-progress -Dsonar.inclusions=**/*.php -Dsonar.exclusions=*./services/php-progress/src/Tests/*.php -Dsonar.test.inclusions=*./services/php-progress/src/Tests/*.php"
                    }
                }
            }
        }

        stage('Test') {
            steps{
                dir('services/php-progress') {
                    script{
                        testingApp = docker.build("${params.USER}/php-progress-test:${params.TAG}", "-f Dockerfile.test .")
                        testingApp.run()
                    }
                }
            }
            
        }

        stage('Build Docker Image') {
            steps {
                dir('services/php-progress') {
                    script{
                        def dockerfile = 'Dockerfile'
                        app = docker.build("${params.USER}/php-progress:${params.TAG}", "-f Dockerfile .")
                    }
                }
            }
        }
         stage('Push image') {
            steps{
                script{
                    withDockerRegistry(credentialsId: 'ferran.dockerhub') {
                        app.push()
                    }
                }
            }
        }   
    }   
}